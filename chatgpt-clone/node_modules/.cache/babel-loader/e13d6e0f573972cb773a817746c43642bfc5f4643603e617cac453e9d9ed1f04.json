{"ast":null,"code":"var _jsxFileName = \"F:\\\\github\\\\Ai-Assistant\\\\chatgpt-clone\\\\src\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faComment } from '@fortawesome/free-solid-svg-icons';\nimport ChatForm from './ChatForm';\nimport ChatMessage from './ChatMessage';\nimport CompanyLogo from '../src/Images/logo1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [showChatbot, setShowChatbot] = useState(true);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const chatBodyRef = useRef();\n  const popupRef = useRef();\n  const API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyDjyXtMbzpuT0Hflor4TIOux5tUC47Xbg0';\n  useEffect(() => {\n    if (chatBodyRef.current) {\n      chatBodyRef.current.scrollTo({\n        top: chatBodyRef.current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  }, [chatHistory]);\n  const generateBotResponse = async history => {\n    const updateHistory = text => {\n      setChatHistory(prev => [...prev.filter(msg => msg.text !== 'Thinking...'), {\n        role: 'model',\n        text,\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }]);\n    };\n    updateHistory('Thinking...');\n    try {\n      var _data$candidates$, _data$candidates$$con, _data$candidates$$con2;\n      history = history.map(({\n        role,\n        text\n      }) => ({\n        role,\n        parts: [{\n          text\n        }]\n      }));\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          contents: history\n        })\n      };\n      const response = await fetch(API_URL, requestOptions);\n      if (!response.ok) throw new Error(`API request failed with status ${response.status}`);\n      const data = await response.json();\n      if (!data.candidates || !((_data$candidates$ = data.candidates[0]) !== null && _data$candidates$ !== void 0 && (_data$candidates$$con = _data$candidates$.content) !== null && _data$candidates$$con !== void 0 && (_data$candidates$$con2 = _data$candidates$$con.parts[0]) !== null && _data$candidates$$con2 !== void 0 && _data$candidates$$con2.text)) throw new Error('Invalid response format from API');\n      const apiResponseText = data.candidates[0].content.parts[0].text.replace(/\\*\\*(.*?)\\*\\*/g, '$1').trim();\n      updateHistory(apiResponseText);\n    } catch (error) {\n      console.error('Chatbot API Error:', error);\n      updateHistory(\"Sorry, I'm having trouble connecting. Please try again later.\");\n    }\n  };\n\n  // Modern glassmorphism chat window\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen w-full flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-lg md:max-w-2xl h-[80vh] flex flex-col rounded-3xl shadow-2xl border border-white/20 bg-white/10 backdrop-blur-lg relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between px-6 py-4 bg-white/20 backdrop-blur-md rounded-t-3xl border-b border-white/20\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: CompanyLogo,\n            alt: \"Logo\",\n            className: \"h-10 w-10 rounded-full border-2 border-white/40 shadow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold text-white drop-shadow\",\n              children: \"AI Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-green-300\",\n              children: \"Online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"h-9 w-9 flex items-center justify-center rounded-full hover:bg-white/20 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-white/30\",\n          onClick: () => setShowChatbot(false),\n          \"aria-label\": \"Close chat\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: \"text-white text-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatBodyRef,\n        className: \"flex-1 overflow-y-auto p-6 flex flex-col gap-4 bg-transparent scrollbar-thin scrollbar-thumb-white/30 scrollbar-track-transparent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-3 items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0 h-10 w-10 flex items-center justify-center bg-gradient-to-br from-indigo-500 to-purple-500 rounded-full shadow-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: CompanyLogo,\n              alt: \"Company Logo\",\n              className: \"h-8 w-8 rounded-full object-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-[80%]\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-4 py-3 bg-white/80 rounded-2xl shadow-md text-sm text-gray-800\",\n              children: \"Hello! I'm your AI assistant. How can I help you today?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-400 mt-1 ml-1\",\n              children: \"Just now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          chat: chat\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/30 p-4 border-t border-white/20 rounded-b-3xl backdrop-blur-md\",\n        children: /*#__PURE__*/_jsxDEV(ChatForm, {\n          chatHistory: chatHistory,\n          setChatHistory: setChatHistory,\n          generateBotResponse: generateBotResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"/gFjAjUl01jX25YUSySMPbvLGuA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faTimes","faComment","ChatForm","ChatMessage","CompanyLogo","jsxDEV","_jsxDEV","Chatbot","_s","chatHistory","setChatHistory","showChatbot","setShowChatbot","isMinimized","setIsMinimized","chatBodyRef","popupRef","API_URL","current","scrollTo","top","scrollHeight","behavior","generateBotResponse","history","updateHistory","text","prev","filter","msg","role","timestamp","Date","toLocaleTimeString","hour","minute","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","map","parts","requestOptions","method","headers","body","JSON","stringify","contents","response","fetch","ok","Error","status","data","json","candidates","content","apiResponseText","replace","trim","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","ref","chat","index","_c","$RefreshReg$"],"sources":["F:/github/Ai-Assistant/chatgpt-clone/src/Chatbot.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faComment } from '@fortawesome/free-solid-svg-icons';\r\nimport ChatForm from './ChatForm';\r\nimport ChatMessage from './ChatMessage';\r\nimport CompanyLogo from '../src/Images/logo1.png';\r\n\r\nconst Chatbot = () => {\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [showChatbot, setShowChatbot] = useState(true);\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const chatBodyRef = useRef();\r\n  const popupRef = useRef();\r\n\r\n  const API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyDjyXtMbzpuT0Hflor4TIOux5tUC47Xbg0';\r\n\r\n  useEffect(() => {\r\n    if (chatBodyRef.current) {\r\n      chatBodyRef.current.scrollTo({\r\n        top: chatBodyRef.current.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [chatHistory]);\r\n\r\n  const generateBotResponse = async (history) => {\r\n    const updateHistory = (text) => {\r\n      setChatHistory((prev) => [\r\n        ...prev.filter((msg) => msg.text !== 'Thinking...'),\r\n        {\r\n          role: 'model',\r\n          text,\r\n          timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n        },\r\n      ]);\r\n    };\r\n    updateHistory('Thinking...');\r\n    try {\r\n      history = history.map(({ role, text }) => ({ role, parts: [{ text }] }));\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ contents: history }),\r\n      };\r\n      const response = await fetch(API_URL, requestOptions);\r\n      if (!response.ok) throw new Error(`API request failed with status ${response.status}`);\r\n      const data = await response.json();\r\n      if (!data.candidates || !data.candidates[0]?.content?.parts[0]?.text) throw new Error('Invalid response format from API');\r\n      const apiResponseText = data.candidates[0].content.parts[0].text.replace(/\\*\\*(.*?)\\*\\*/g, '$1').trim();\r\n      updateHistory(apiResponseText);\r\n    } catch (error) {\r\n      console.error('Chatbot API Error:', error);\r\n      updateHistory(\"Sorry, I'm having trouble connecting. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  // Modern glassmorphism chat window\r\n  return (\r\n    <div className=\"min-h-screen w-full flex items-center justify-center\">\r\n      <div className=\"w-full max-w-lg md:max-w-2xl h-[80vh] flex flex-col rounded-3xl shadow-2xl border border-white/20 bg-white/10 backdrop-blur-lg relative\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between px-6 py-4 bg-white/20 backdrop-blur-md rounded-t-3xl border-b border-white/20\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <img src={CompanyLogo} alt=\"Logo\" className=\"h-10 w-10 rounded-full border-2 border-white/40 shadow\" />\r\n            <div>\r\n              <h2 className=\"text-lg font-bold text-white drop-shadow\">AI Assistant</h2>\r\n              <span className=\"text-xs text-green-300\">Online</span>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"h-9 w-9 flex items-center justify-center rounded-full hover:bg-white/20 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-white/30\"\r\n            onClick={() => setShowChatbot(false)}\r\n            aria-label=\"Close chat\"\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} className=\"text-white text-lg\" />\r\n          </button>\r\n        </div>\r\n        {/* Messages */}\r\n        <div\r\n          ref={chatBodyRef}\r\n          className=\"flex-1 overflow-y-auto p-6 flex flex-col gap-4 bg-transparent scrollbar-thin scrollbar-thumb-white/30 scrollbar-track-transparent\"\r\n        >\r\n          <div className=\"flex gap-3 items-start\">\r\n            <div className=\"flex-shrink-0 h-10 w-10 flex items-center justify-center bg-gradient-to-br from-indigo-500 to-purple-500 rounded-full shadow-sm\">\r\n              <img src={CompanyLogo} alt=\"Company Logo\" className=\"h-8 w-8 rounded-full object-cover\" />\r\n            </div>\r\n            <div className=\"max-w-[80%]\">\r\n              <div className=\"px-4 py-3 bg-white/80 rounded-2xl shadow-md text-sm text-gray-800\">\r\n                Hello! I'm your AI assistant. How can I help you today?\r\n              </div>\r\n              <div className=\"text-xs text-gray-400 mt-1 ml-1\">Just now</div>\r\n            </div>\r\n          </div>\r\n          {chatHistory.map((chat, index) => (\r\n            <ChatMessage key={index} chat={chat} />\r\n          ))}\r\n        </div>\r\n        {/* Input */}\r\n        <div className=\"bg-white/30 p-4 border-t border-white/20 rounded-b-3xl backdrop-blur-md\">\r\n          <ChatForm\r\n            chatHistory={chatHistory}\r\n            setChatHistory={setChatHistory}\r\n            generateBotResponse={generateBotResponse}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}